---
interface Props {
  width: string;
  class?: string;
}

const { width, class: addClass } = Astro.props;
---

<div class:list={["carousel", addClass]} style={`width: ${width};`}>
  <div class="carousel__prev">
    <i class="fa-sharp fa-solid fa-angle-left"></i>
  </div>
  <div class="carousel__items">
    <slot />
  </div>
  <div class="carousel__next">
    <i class="fa-sharp fa-solid fa-angle-right"></i>
  </div>
</div>

<style>
  .carousel {
    position: relative;
    margin: auto;
  }

  .carousel__items {
    display: flex;
    overflow-x: hidden;
  }

  .carousel__prev,
  .carousel__next {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 1;

    display: flex;
    align-items: center;
    justify-content: center;

    padding: min(1rem, 2vw);
    transition: text-shadow 0.2s;
  }

  .carousel__prev {
    left: calc(-1 * (min(3rem, 6vw) + min(1rem, 2vw)));
  }

  .carousel__next {
    right: calc(-1 * (min(3rem, 6vw) + min(1rem, 2vw)));
  }

  .carousel__prev i,
  .carousel__next i {
    font-size: min(3rem, 6vw);
    color: rgb(255, 255, 255, 0.9);
    text-shadow:
      -3px 0 10px #000000a4,
      0 3px 10px #000000a4,
      3px 0 10px #000000a4,
      0 -3px 10px #000000a4;
    transition:
      color 0.2s,
      text-shadow 0.2s;

    cursor: pointer;
  }

  .carousel__prev i:hover,
  .carousel__next i:hover {
    color: rgb(255, 255, 255);
    text-shadow:
      -3px 0 10px #000,
      0 3px 10px #000,
      3px 0 10px #000,
      0 -3px 10px #000;
  }
</style>

<script>
  import { initCarousel } from "../scripts/carousel.ts";
  const carousels = document.querySelectorAll(".carousel");

  carousels.forEach((carousel) => {
    initCarousel(carousel as HTMLElement);
  });
</script>
