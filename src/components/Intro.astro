<div class="container">
  <div class="contents intro-container">
    <h3>{"{"}</h3>
    <h3>
      &emsp;createdBy: "<span class="blue">Ashira Aungsumal</span>"
    </h3>
    <h3>
      &emsp;from: "<span class="yellow">Debsirin</span>
      <span class="green">School</span>"
    </h3>
    <h3>
      &emsp;to: "<span class="pink">Chula/Engineer/Computer(CEDT)</span>"
    </h3>
    <h3>{"}"}</h3>
  </div>
  <img class="my-image" src="/images/IMG_0648.jpg" alt="" />
</div>

<style>
  .container {
    height: 100vh;
    height: 100dvh;

    display: flex;
    align-items: center;
    justify-content: space-around;
  }

  .contents h3 {
    font-family: "Fira Code", monospace;
    font-weight: 400;
  }

  .my-image {
    display: block;
    height: 80vh;
    object-fit: cover;
    border-radius: 1rem;
    /* transition: box-shadow 0.1s ease-out; */
    /* transition: none; */
  }
</style>

<script>
  import gsap from "gsap";
  import { fromScrollTrigger } from "../scripts/fromScrollTrigger.ts";

  fromScrollTrigger(".contents", { x: -500 }, 1.5);
  fromScrollTrigger(
    ".my-image",
    {
      x: 500,
      delay: 0.5,
      ease: "power4.out(1, 0.3)",
      onComplete() {
        gsap.to(".my-image", { boxShadow: "0px 0px 20px white" });
      },
      onStart() {
        gsap.to(".my-image", { boxShadow: "none" });
      },
    },
    1
  );

  const myImage = document.querySelector(".my-image") as HTMLElement;

  myImage.onmousemove = (e) => {
    let [offsetX, offsetY] = getOffset(e, myImage);
    gsap.to(".my-image", {
      boxShadow: `${offsetX}px ${offsetY}px 50px white`,
      duration: 0.25,
    });
    // myImage.style.boxShadow = `${offsetX}px ${offsetY}px 50px white`;
  };

  myImage.onmouseleave = (e) => {
    gsap.to(".my-image", { boxShadow: "0px 0px 20px white", duration: 0.25 });
  };

  function getOffset(e: MouseEvent, element: HTMLElement) {
    let rect = element.getBoundingClientRect();
    let deltaX = e.pageX - (element.offsetLeft + element.offsetWidth * 0.5);
    let deltaY =
      e.pageY - (rect.top + window.scrollY + element.offsetHeight * 0.5);

    let offsetX = deltaX / 25;
    let offsetY = deltaY / 25;

    return [offsetX, offsetY];
  }
</script>
